<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAHdElNRQfpBBARADBjO+heAAAA
        GXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAEBFJREFUaEPtWQl0FFW67kQcXEaDKEtI
        1b1Vt3pLdzrpbGQnm1kIZIUsskgggAJPtrAYwIgQniLIIpCQhFXDIuqMy2gYQWAkgUB03HXGcRRcQAQU
        kR3S3zv3dnfSJEF985zR8473nP9UV6W6+v/q/75/udHpflu/rf9/SyNUGCNUZYQWMkJGMUIjGVG6MqK0
        v/3Xt7iTGqU6jSo9GKHTmCx9pKnaFb1mcjBCvmWErtSo0p2D/FUujSg65gRwIyM0X5WkfRxA8J13I/X+
        l5ExvwmRBXOgZ4YWRmgFo4oXo7+yyHAQGlW8NapEqbK8jRFyNjIuDfcu2IbiujPIWfE5Mhd/gPz1ZxCe
        eR+YLB1lVInkQBhh7R/3n19uHWhUYUwmi1RJOhYY1BfDpz6Gpdu/wopd36Fw5nqYghNgDopB5qL3kPno
        uzBZw8FkeQujyg2/qF64BpxaUG5jhE5QJflDs9HfkTV8Ciqeeh+rGy5ixqod6JdeAJOiYqBMECzJCMue
        jPwN5xE7YhEYIWcYoYMEHX8JMC4hd2WEDlQleTcj5FJMYiZmVu7E6oYLAkjm0EkwGvyRJMmolRg+lTRM
        lxUwvRlpc15FbuURWMNTOcX2MpEU/oNAXAC8NKqEqLL8BJPJ6YiYFCT2L0JMUhYWvXgYK3adQmxyNsx+
        fiiXVXwgafhM0lArMyRIMjTNhKTJW1G0BUiatBk8GTBCpzq18m/OYjz0eieNZEbIfFWSvgywheCu/1qA
        xX/6ArNrX4PVasfEhdtQe9CBvJIy2CQZL0gML0sMBRKBUVERkzoYAx/Yjvz1F1C4CUiauAl6VQ9G6CZG
        6HX/NiBMUdxCvpURWqJK0ttGvaklo3A85j75BmqarmDNQWB14yU8uLEZc9buw7I/f42Hn/07gsNiEOEn
        wca1EZGAseVrsXznSZRthwCRs/ILWEKTuOD3alQxuGvPz75cNLqeEZqiSnK9RpWLcSm5KF32Eqr2nsOa
        ZqD2AFDT5DxW7j2DxIwi9M+/B5V7z2HMA7UIColCwbiHsPC5T7DmoEOAXtEAlDwDoRO9quf1ZASn1c9e
        HDmNGKVcBwGqTGpUWf42NDwOo+fUYPmOEx0AuK2myYFRZZW4M+turNj1DaoazmPRC4dRvf+SAOB574x6
        IHXWK259FPFo6Alp78q/tpxvReigNyNklipJh6yWIOSPLccjf/hYcL/2YEcAnqBWN17E/C3vYty8J7B8
        Z0fQ/LjmAFBWD2Qt+xT+gdE8a72kUaWPM53Tmxmlt7n6s/Yu/vDShA4EgJsZoUNUSWo2MMOVtLwSlG84
        gNqDV7Dujc6j0B7M2magrHoPDEwvNMGBeILgx6r9wLhngYInHYi/txZ6ZmxRJb/XmSTVMlnaxQh9mVHF
        lzPjJy+XDni26KfK8nOM0PPRCQMwadEfUPnaWTz6/CGMr6jDpMV//EFaedrKPd9j+JTFmPZ4PWqaWq76
        26pGYPqfgKI6oLAOyN9wAclTn4E9oQiWkERYw1N4H+ZghM76SVHhN3DTqGJkMlmuSvIJe0gUimc8LtqK
        2gMtmLBgE7g2LIoCo8oQn16IOWsbRab6MYrV7L8innV36RJUN15CdRNQsRMY+4wTQMGTQCE3DmiTA4PX
        nUVe1dfIrTyGkLQSMEk6pFHFxumudlYoNVF0BI3uYIROUSXpH/4mqyO3eAYWbPtQAODCrGq4gLRBo6H6
        9cHCfnZsTg1DvEGFv9WO4aVLroqOMC5mD0Fz4RfcUw5bYChmbf0nJr4A3LXJCUCAcEWkDYwTED9mzN8P
        ozkITCY1GqXXX0UxTXa31/QGRmieKkkNelW7nJw5THB69b6LbZmFv9WDQMXW9xAefSdSTBreHRyLfxTG
        4b4wC0yKIvonHp3q/VcElZbUf4Wl249h2SvHsXzHSfEiFrxwBNlzXkTOkr8hf8NFFLidd1kroE0OZC//
        FNFDFyBh3BoUbLyEqMJyXl/43JLqSgI6nb6tuePdaR1v1CJiUzFhwWas3P3dNXnPr3NnbfZI5FgN+PSu
        fjhfnIQtaWFINDLYbCHIHDYZsWmDYY+IR3BkIsKik9E3OhkDS+Zh1LYWZC1+XxS95KlPO9/6VQCAQTXf
        IGH8OliC+0GvGRFb/Ji4nr30Y1js/TiYeuYsxk49aFTxYTJ5weJvw9BJC0VbcS0AV4E5CExd9iLM/oEo
        tptxbFg8HCXJqEsNg1lRoEkS8iSCUolimkSRIxEofn0QkT9HZKW81ccRlFCI6LseagXiFnnqrD8jKG4Q
        NFUv7kkv3y264rzVX6PgicvoN7YKGlXOMUIzxPDlEnamRtXzvGC5ddBKo07EykG2FbEW3PvQRpgM/pgU
        bsWyhGCEGzREEwWVMsNhScM3fnockTSMkimMgVHIfOzDVsfzqo4h/cG/oP9DjS5wJ9A3ewr0mklkqsT7
        6jB47WnkrjqCmGEPwxqWLCZJPrcYTTaulamixee0UmVSavEPRMXWd67K7Z2B4ELmlOKFTWinmRe6c6It
        p7IMA6EYJavY5wLA7ZSfHpslBjMhiB259CotcEA8IiZLKLKWfIScxw8hKL4A0UP/G7krv8Tgtd+L5pFT
        kIPj02Nu1VGkl+/i53zGL3FGRGQqMsqoNzpmrHrlmkB4BBb+8RPEp+XDrDfBYrWj4N65IpsVz1wBa2AY
        YgjFapnhc0kTzn/rpxdzxjqZIUaSYY0aiNxVXzqj4aGFAQ+/ibABE5D12N/E+eA1pwWN0sv3iBrCO+DA
        uDzRtnDaDVz4LgLjBnGN/JNRxeSiFs9YikGVpI9Tc0Zi1Z7vO4BwA1nw1Aew2kKRYtYEjbgOrIGhMCkM
        oyWK/ZImnOcgPpE0bJAZsmUFBpnAPzQJAxY0C0evSrEu4xTjUciYtx9Fm4GECetFBPztcULwg2pPIbfq
        GGKLl8Ac0JdT6ggjdJiiaiIYrTsbjJCZBqZvmbjw6WtGhVdingyCmIp7Qi3wV1XEyBTVMsOXkobTngCI
        AjNVkGIxIEglCM+ejMI6RwcAbsut/AqW4HiEpI4SYk6bsxOxIxYj5/HDoiAmT3kalvD+fDbhI/D3GlVy
        GC8bntVdNIRU6a1KUlNUfAaW1B/pUJ1FQ9cMzN/6NqwBwVBkIrRwQNLwnQvAOokhWyLQyzLsGsOGlFB8
        WhSHHIsGe9oY4WB7AG3mEJkpufRZDKo5icLNDhQ8eVkkAXtyMQyahsz4nshJ7g1GlOO8++YF/KrljIiw
        IkbouRHTlmJNs8OZnXgadmUoXtxyR86EgarQE4rlMsMhlwZ4BIwKgzUmG7Z++YjQM/y9MA4Xi5MwJNAA
        W+IQ5K8/3wmANr1wSiVP3iJ0wUFFDJ4NzWBDXEhvTCvujpG5PRBukzmQrxil/p02jq6Ns5tUWX42yB6B
        EdOWiS2b+x7ZhiX1R7H2daBs9S4YNAMG9VSR6KuiL1GQQRQBSmUGxJWsEFxOf3CP4PfGlFA4RiZhTLAJ
        luhskYE6gPAognxO58VRUzQwzYogs4QZI2/DzuquGJbZE4qsfKvKykaN0hEapTd2OjG6h3uNKrGM0GOq
        LF9SJamFEQUxSdmYt+UdVDx/BPaoNNh8+8DCixsh6GvQMCbEAqPejIyKJuFMXvVJ+EdkYJTdhHMjEjEl
        3AJzWKq43hkAkanWncWd05+DNTILJkYxPLMHtlfegDONOjy96GboFXqZEWWyRqj3j24NuaY/3rYPYISO
        VmXlywH9fBFt74Wo1CG4+4nTSJu9A+G5paKyBqeNRoReRVmUDSbNIApb4Wanc1FDKxDGKD4siMXcaBuM
        QXGiqHlSyZnBLiOj4gCC08ZCY0akx/TCxvk34+gOL1xp1gF/1WH+hO4gfspnGqXsR1t3z8VFpFEaTCXl
        66XTu6HmgVugaWb0n7dfOMorMH/zvLqaAyJglPrAGpooMoyzUwX6z90Lvd6MmuQQzI4KgMEWJbZFW1sR
        3gwu+wRRRXNhMNsRGeiLhyf54KPnr8OlAzo4XtcBb+iAN3VYPLUbuC/cJxdr2rvctni4+JYO36LUKDUo
        svJUkJmgua4rdlTfCKPGkHJ/fesbd5pzirMnDnFGw4M2vOELiBqIvhqFXZERmnGvU+ybgUHVJxE/bg1M
        9gTIvgTZSb3Q9MT1OLvPAwA3/vlNHfZtuAHcF0VWtnLfuI8q0UQN7LDEOEuUnhpVtiqy8lmAkbSsLPPB
        +SYvzBvXDXpjEAY+8naHLpW31ZzfYl7wpE0dRPHSGwMQnlOKnBWHkb/xAlLL6mGLHQyjqiA/tQeGDOiF
        Jyt+Lxx3uAG0s0sHdVgx0wdWA2nhvnEfGaU9O81aTjrxnRHleGF6b+yquREXmnSonnMrfwD65k4X7YHn
        W++sQnuCyas+gYGPvutsKx55G6ED7oPGzEiO6IWa8t/js3pvNK7vikMvdRFaaA/A0y4e0GFX9Y3gvnEf
        GaUBPwhEkZTjlbN9gHd0aGnWYUbx7VAUM9LLX3XpoxPH21nrPZsheqvo4QuhN4chzNoHc8d1w/vPdhFv
        +fgub/SP64OHJ97WCqTldR0uH+xo/Dr3ifvGfey0IHYAMstHcJM//M0tv0NfWx+EDpwoGrn2TncKgA9F
        taeQOLEO/qEpsOhl3JN/O15b9zuRTt06OPUXb4zI6oXVs28Vv/fda16YN747SnJ7YnRem43K7SkEz5NA
        1ax/BcgbOvHDD43vJrIW53dnTZ8ngIKNF5H+wG4EJgyFXmXITe6JZxbfhBO7vcRb9dQBP//rlq74Yvt1
        4qV9s9sbE4fegcwEX2Qnthk/Lyu5HRf2/x+A8LC+90wX3BnZS4iUZxzhtFvsraBakLnofYTnTIOmt6Jf
        WG+suP8WHHrZWzyjMyFzxwen9say6d1aqcW1cLbRq4NxKuItHbhvPwJEbD50AMJpwNMiF6eRKSJteo6l
        /HNu5VHEjlwGgzUSwf59UDb6Nrz1VBeRLK5Kp+3s5G5v5Cb7YklpN/F7Zxq8BM3mjLkdD4zt3mqzx9yO
        DfNuwZWDbRq5pthdVd1EJeXooqnOB7t/kFfYw/XeKOrfA4aAGFHs+M4H1wHfQLP0HQCzRjAy5w68WtMV
        pxt+GIDbBLU2d8Xn9U5qHX/VG3dn9UJMiIS40Dbj5+MLe+DsPi8sLhXF8Sgj1NRplXdRy0eRlIasRF8c
        5imRg3EZD+2etV2RHOkLk38I7ElDYYvOgkmvR3ZiTzz16E04uccLDk4Rj+9d097S4VSDtxBz7YO3Am/r
        4HhTh9MNXgJQe+P04mma+8Z9ZIT6dArE/X86RpS7GFFO8S/wTMFpxo0XxyXTfHBPfg/4azJUSYIqyYiy
        +6FsdHc8PvPW1nt/ilXN9sGjk7sh0EyQk+wrROy+zunV3h4r7SZAcN+4j87NxE6A8OXsY2gXfqMiKY1U
        Ur5SJOUE56TbnEMNdR2dn3mB8rznf2P8OSrpeL2dnXD50ugEQbv86P/fRTuvCL34aJSaXdnhlzdCzW46
        XTMSv63f1s+//gfyusn/6yIR2QAAAABJRU5ErkJggg==
</value>
  </data>
</root>